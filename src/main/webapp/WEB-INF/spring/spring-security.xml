<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
			
<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
<bean id="customLoginSuccess" class="com.jeju.trip.security.CustomLoginSuccessHandler"></bean>
<bean id="customUserDetail" class="com.jeju.trip.security.CustomUserDetailsService"></bean>

<security:http auto-config="true" use-expressions="true">
	<security:intercept-url pattern="/" access="permitAll"/>
	<security:intercept-url pattern="/Trip/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"/>
	<security:intercept-url pattern="/QnA/**" access="hasRole('ROLE_USER')"/>
	<security:intercept-url pattern="/Itinerary/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"/>
	<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
	 <security:csrf disabled = "true" /> 
	<security:form-login login-page="/Member/Login" login-processing-url="/Member/login-processing"
	authentication-success-handler-ref="customLoginSuccess"
			/>
	<security:logout logout-url="/Member/logout" invalidate-session="true"
		logout-success-url="/Member/Login"
		delete-cookies="JSESSION_ID"/>			
</security:http>

<security:authentication-manager>
	<security:authentication-provider user-service-ref="customUserDetail">
			<security:password-encoder hash="bcrypt"/>
			<!-- 
			<security:jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="SELECT ID, PASSWORD, ENABLED FROM member WHERE ID=?"
				authorities-by-username-query="SELECT ID, PASSWORD, AUTH as authority FROM member WHERE ID=?"
			/>	
			-->		
		</security:authentication-provider>
</security:authentication-manager>

</beans>
